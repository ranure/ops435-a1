Algorithim for Assignment 1 

1. Takes the first data item in YYYY/MM/DD format (remove the two '/' in the value)

2. Adding the 2nd date item and converts it into an integer value. Can be either positive or negative

3. The date value is then split into 3 values, that being year, month, and day

4. Usage() function uses the len fuction to check whether the inputted date meets the required length. If it doesn't match, a string indicating an incorrect value is displayed

5. All functions check to see whether date was inputted properly by using the len() function. If the date wasn't properly inputted, the value '0000/00/00'
will be returned.

6. Starting with the after() function, after checking that the date was inputted properly, the date inputted get split into year, month, date. The year value is then checked to see
whether it's a leap year or not with an if/else statement. If the year divided by 4 is 0, then it's a leap year and February will have 29 days, anything else will mean February
has 28 days. The day integer is then added with 1 and stored to tmp_day. mon_max is then declared and in it stored how many days are in each month. 
tmp_day is then checked to see if it exceeds mon_max to know whether to go into the next month if the standardary days in a specific month are exceeded. After all this
has been confirmed, the date is then returned, one day after the inital date that was inputted

7. before() function runs almost exactly the same as the after()function, but instead of adding 1 to the day integer, it subtracts 1. This is done in order to return
a date 1 day before the inital inputted date

8. valid_date() function is used to check whether a valid date was inputted or not by checking the length of the string. If the string is less than or more than 10, the
function returns 0000/00/00

9. leap_year() function returns checks to see whether the year inputted is a leap year or not. It checks by dividing the inputted year by 4 and if it equals 0, meaning
it's a leap year, than the function returns "True". Anything else returns "False"

10. days_in_mon() function checks to see how many days are in each month that year with the assistance of the leap_year() function. It takes the value from the leap_year() 
function from whether the year is a leap year or not and then confirms all the days in each month with the information.

11. dbda() function takes the date inputted, and the second integer as well and uses both to determine how many days before or after the initial inputted date will be displayed.


